{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAChCC,EAAaF,SAASC,cAAc,2BACpCE,EAAYH,SAASC,cAAc,0BACnCG,EAAcJ,SAASC,cAAc,4BAoB3C,SAASI,EAAcC,G,IAACC,EAADD,EAACC,SAAUC,EAAXF,EAAWE,MAChC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAACH,WAAUC,UAEnBG,EAAO,CAACJ,WAAUC,S,GAChBA,E,IAKV,SAASO,EAAQT,G,IAACC,EAADD,EAACC,SAAUC,EAAXF,EAAWE,MAC1BX,EAAAmB,OAAOC,QAAQ,sBAAuCC,OAAfX,EAAS,QAAYW,OAANV,EAAM,O,CAG9D,SAASW,EAAUb,G,IAACC,EAADD,EAACC,SAAUC,EAAXF,EAAWE,MAC5BX,EAAAmB,OAAOI,QAAQ,uBAAsCF,OAAfX,EAAS,QAAYW,OAANV,EAAM,O,CApC7DT,EAAOsB,iBAAiB,UAExB,SAAsBC,GACpBA,EAAMC,iBAMN,IAJA,IAAIf,EAAQgB,OAAOtB,EAAWuB,OAC1BC,EAAOF,OAAOrB,EAAUsB,OACxBE,EAASH,OAAOpB,EAAYqB,OAEvBlB,EAAW,EAAGA,GAAYoB,EAAQpB,IACzCF,EAAc,CAACE,WAAUC,UAAQoB,KAAKT,GAAWU,MAAMd,GACvDP,GAASkB,EAGX3B,EAAO+B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector(\".form\");\nconst inputDelay = document.querySelector(\".form input[name=delay]\");\nconst inputStep = document.querySelector(\".form input[name=step]\");\nconst inputAmount = document.querySelector(\".form input[name=amount]\");\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  \n  let delay = Number(inputDelay.value);\n  let step = Number(inputStep.value);\n  let amount = Number(inputAmount.value);\n\n  for (let position = 1; position <= amount; position++) {\n    createPromise({position, delay}).then(onSuccess).catch(onError);\n    delay += step;\n\n  }\n  formEl.reset();\n}\n\n\nfunction createPromise({position, delay}) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }}, delay);\n    });\n  \n};\n\nfunction onError({position, delay}) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay} ms`);\n}\n\nfunction onSuccess({position, delay}) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay} ms`);\n}\n  \n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$inputAmount","$ce04d3a99e08e73b$var$createPromise","param","position","delay","Promise","resolve","reject","setTimeout","Math","random","$ce04d3a99e08e73b$var$onError","Notify","failure","concat","$ce04d3a99e08e73b$var$onSuccess","success","addEventListener","event","preventDefault","Number","value","step","amount","then","catch","reset"],"version":3,"file":"03-promises.bf80a7d6.js.map"}